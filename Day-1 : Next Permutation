class Solution {
public:
    void nextPermutation(vector<int>& nums) 
    {
       int n=nums.size(); 
       int ind1 = -1;
        for(int i=n-1;i>=1;i--)
        {
            if(nums[i]>nums[i-1])
            {
                ind1=i-1;
                break;
            }
        }
        if(ind1 == -1)
            {
            reverse(nums.begin(),nums.end());
            }
        else
        {
        int ind2=-1;
        for(int i=n-1;i>=ind1;i--)
        {
            if(nums[i]>nums[ind1])
            {
                ind2=i;
                break;
            }
        }
            swap(nums[ind1],nums[ind2]);
            reverse(nums.begin()+ ind1 + 1,nums.end());
        }
    }
};

METHOD -2 
#include <bits/stdc++.h> 
vector<int> nextPermutation(vector<int> &permutation, int n)
{
    //  Write your code here.
    int ind1=-1;
    for(int i=n-1;i>=1;i--)
    {
        if(permutation[i] > permutation[i-1])
        {
            ind1=i-1;
            break;
        }
    }
    if(ind1 == -1)
    {
        reverse(permutation.begin(),permutation.end());
    }
    else
    {
        int ind2=-1;
        for(int i=n-1;i>=ind1;i--)
        {
            if(permutation[i] > permutation[ind1])
            {
                ind2=i;
                 break;
            }
        }
        swap(permutation[ind1],permutation[ind2]);
        reverse(permutation.begin() + ind1 + 1,permutation.end());
    }
    return permutation;
}
